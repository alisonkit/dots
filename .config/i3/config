###################
##### GENERAL #####
###################

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
# font pango:Source Sans Pro 12
font pango:Fantasque Sans Mono 14

# This font is widely installed, provides lots of unicode glyphs, right-to-left text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 12

# Start XDG autostart .desktop files using dex. See also https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec kitty

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
bindcode $mod+40 exec "rofi -modi drun,run -show drun"

###################
##### WINDOWS #####
###################

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# bindsym $mod+b split h

# split in vertical orientation
#bindsym $mod+v split v

# split toggle
bindsym $mod+t split toggle

#default orientation
default_orientation auto

#Hiding borders adjacent to the screen edges
hide_edge_borders smart

# kill focused window
bindsym $mod+Shift+q kill

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+c focus child

# shortcut to change window border
bindsym $mod+i border normal    0
bindsym $mod+y border pixel     4
bindsym $mod+u border none

# reload the configuration file
bindsym $mod+Shift+c reload

# resize window (you can also use the mouse for that)
bindsym $mod+Ctrl+h resize shrink width 10 px or 10 ppt
bindsym $mod+Ctrl+j resize grow height 10 px or 10 ppt
bindsym $mod+Ctrl+k resize shrink height 10 px or 10 ppt
bindsym $mod+Ctrl+l resize grow width 10 px or 10 ppt

bindsym $mod+Ctrl+Left resize shrink width 10 px or 10 ppt
bindsym $mod+Ctrl+Down resize grow height 10 px or 10 ppt
bindsym $mod+Ctrl+Up resize shrink height 10 px or 10 ppt
bindsym $mod+Ctrl+Right resize grow width 10 px or 10 ppt

######################
##### WORKSPACES #####
######################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:   Terminal"
set $ws2 "2:   Art"
set $ws3 "3:   Code"
set $ws4 "4:   Web"
set $ws5 "5:   Chat"
set $ws6 "6:   Media"
set $ws7 "7:   Gayming"
set $ws8 "8:   Streaming"
set $ws9 "9: Presentation"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

#workspaces on specific screens
workspace $ws1 output primary
workspace $ws2 output nonprimary
workspace $ws3 output primary
workspace $ws4 output primary
workspace $ws5 output primary
workspace $ws6 output primary
workspace $ws7 output primary
workspace $ws8 output primary
workspace $ws9 output nonprimary
workspace $ws0 output nonprimary

# move specific apps to specific workspaces (use "xprop | grep WM_CLASS" and click on window to get class)
assign [class="pentablet"] $ws1
assign [class="OpenTabletDriver.UX.Gtk"] $ws1
assign [class="Arandr"] $ws1
assign [class="Lxappearance"] $ws1
assign [class="gnome-menu-editor-qt"] $ws1
assign [class="Ranger"] $ws1
assign [class="Btm"] $ws1
assign [class="krita"] $ws2
assign [class="Inkscape"] $ws2
assign [class="Blender"] $ws2
assign [class="Ardour"] $ws2
assign [class="OpenToonz"] $ws2
assign [class="Emacs"] $ws3
assign [class="pico8"] $ws3
assign [class="Godot"] $ws3
assign [class="firefox"] $ws4
assign [class="librewolf"] $ws4
assign [class="qutebrowser"] $ws4
assign [class="qBittorrent"] $ws4
assign [class="FreeTube"] $ws4
assign [class="Telegram"] $ws5
assign [class="discord"] $ws5
assign [class="Music"] $ws6
assign [class="mpv"] $ws6
assign [class="Vimiv"] $ws6
assign [class="calibre"] $ws6
assign [class="Zathura"] $ws6
assign [class="Pavucontrol"] $ws6
assign [class="Lutris"] $ws7
assign [class="Steam"] $ws7
assign [class="steamwebhelper"] $ws7
assign [class="heroic"] $ws7
assign [class="ProtonUp-Qt"] $ws7
assign [class="PrismLauncher"] $ws7
assign [class="dolphin-emu"] $ws7
assign [class="obs"] $ws8
assign [class="veadotube mini.x86_64"] $ws8
assign [class="StreamMusic"] $ws8
assign [class="Cava"] $ws8

workspace_auto_back_and_forth yes

focus_on_window_activation focus

bindsym $mod+Tab move workspace to output next

########################
##### APP SETTINGS #####
########################

#Set paths for custom applications
set $veado exec Applications/AppImages/veadotubemini/veadotube\ mini.x86_64 &disown
set $cmus exec kitty --name Music --class Music cmus 
set $btm exec kitty --name SysMo --class SYsMo btm 
set $cava exec kitty --name Cava --class Cava cava
set $ranger exec kitty --name Ranger --class Ranger ranger

# Application Launchers
set $mode_launcher Launch: krit[a] [e]macs [t]elegram [d]iscord [s]team [o]bs [b]lender [q]utebrowser c[m]us [l]utris qbi[T]orrent [g]odot ardo[u]r [O}penToonz [i]nkscape
bindsym $mod+o mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym a exec krita
    bindsym e exec emacs
    bindsym w exec "flatpak run io.gitlab.librewolf-community"
    bindsym t exec "flatpak run org.telegram.desktop"
    bindsym d exec "flatpak run com.discordapp.Discord"
    bindsym q exec qutebrowser
    bindsym T exec qbittorrent
    bindsym g exec godot
    bindsym l exec lutris
    bindsym s exec steam
    bindsym o exec "flatpak run com.obsproject.Studio"
    bindsym u exec ardour7
    bindsym b exec blender
    bindsym O exec "flatpak run io.github.OpenToonz"
    bindsym m exec $cmus; exec cmusCoverViewer
    bindsym v exec $veado
    bindsym i exec inkscape

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# windows with floating mode by default
for_window [class="pentablet"] floating enable
for_window [class="OpenTabletDriver.UX.Gtk"] floating enable
for_window [class="Gnome-screenshot"] floating enable
for_window [class="Arandr"] floating enable
for_window [class="Lxappearance"] floating enable
for_window [class="gnome-menu-editor-qt"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="ProtonUp-Qt"] floating enable
for_window [class="System-config-printer.py"] floating enable
for_window [class="krita"] floating enable
for_window [class="git-credential-manager-ui"] floating enable

# border settings for different windows
for_window [class="krita"] border none
for_window [class="Emacs"] border none
for_window [class="Blender"] border none
for_window [class="qutebrowser"] border none
for_window [class="Inkscape"] border none
for_window [class="obs"] border none
for_window [class="Ardour"] border none
for_window [class="OpenToonz"] border none
for_window [class="Discord"] border none
for_window [class="cmusCoverViewer"] border none
for_window [class="Music"] border none
for_window [class="steamwebhelper"] border none

#workspace layout for different apps
for_window [class="Music"] layout tabbed 
for_window [class="obs"] layout tabbed 
for_window [class="veadotube mini.x86_64"] layout tabbed 
for_window [class="krita"] layout tabbed 
for_window [class="Blender"] layout tabbed 
for_window [class="Inkscape"] layout tabbed 
for_window [class="Emacs"] layout tabbed 
for_window [class="Godot"] layout tabbed 

set $ws_launcher Launch: (a)rt, (s)treaming, 
bindsym $mod+Shift+o mode "$ws_launcher"

mode "$ws_launcher" {
    # add krita, ranger, btm
    bindsym a exec krita; $cmus; $ranger; $btm; workspace   Art; 
    # add obs, cava
    bindsym s exec $cmus; $veado; $cava; exec "flatpak run com.obsproject.Studio";

    bindsym Escape mode "default"
    bindsym Return mode "default"
}

#####################
##### WALLPAPER #####
#####################

set $wal Pictures/Wallpapers/panda7.jpg

###################
##### STARTUP #####
###################

exec_always --no-startup-id wal -i $wal --backend colorz
exec_always --no-startup-id picom
exec_always --no-startup-id dunst
exec --no-startup-id cbatticon
exec --no-startup-id nm-applet
# uncomment below for polybar (currently breaks multiple monitors)
# exec --no-startup-id bash /home/alisonkit/.config/polybar/launch.sh --forest
exec --no-startup-id sxhkd

############################################
##### LOCK, SUSPEND, RESTART, SHUTDOWN #####
############################################

#Set custom image for lockscreen (only works for pn files)
set $i3lockwall i3lock -i $HOME/Pictures/Wallpapers/panda2.png -t -e -f -b 

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (CTRL+s) shutdown

mode "$mode_system" {
    bindsym l exec --no-startup-id $i3lockwall, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $i3lockwall && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $i3lockwall && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Ctrl+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+BackSpace mode "$mode_system"

######################
##### SCREENSHOT #####
######################

bindsym $mod+Ctrl+x exec scrot $HOME/Pictures/Screenshots/`date +%Y-%m-%d_%H:%M:%S`_full.png
bindsym $mod+Shift+x exec scrot --select $HOME/Pictures/Screenshots/`date +%Y-%m-%d_%H:%M:%S`_select.png
bindsym $mod+x exec scrot --focused $HOME/Pictures/Screenshots/`date +%Y-%m-%d_%H:%M:%S`_window.png

#############################
##### DISPLAY SWITCHING #####
#############################

set $mode_display Config monitor resolution - Laptop (l) - Drawing Tablet (t)

mode "$mode_display" {
    bindsym l exec --no-startup-id xrandr --output eDP-1 --primary --auto --output && wal -i $wal --backend colorz
    bindsym t exec --no-startup-id xrandr --output eDP-1 --primary --auto --output HDMI-1-0 --mode 1920x1080 --rate 60.00 --below eDP-1 && wal -i $wal --backend colorz

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+s mode "$mode_display"

######################################
##### OPTIMUS GRAPHICS SWITCHING #####
######################################

set $optimus Switch Nvidia Optimus Graphics Mode (i)ntegrated, (h)ybrid, (n)vidia
bindsym $mod+n mode "$optimus"

mode "$optimus" {
    bindsym i exec optimus-manger --switch --no-confirm integrated
    bindsym h exec optimus-manger --switch --no-confirm hybrid
    bindsym n exec optimus-manger --switch --no-confirm nvidia
        
    bindsym Escape mode "default"
    bindsym Return mode "default"
}

######################
##### STATUS BAR #####
######################

# start i3bar to display a workspace bar
 bar {
    status_command          i3blocks
    bindsym button4         nop
    bindsym button5         nop
    position                top
    tray_output             primary
    separator_symbol        "·"
    workspace_buttons       yes
    strip_workspace_numbers yes
    tray_padding 4
    padding 2px 0

    colors {
        background  $c0
        statusline  $cw
        separator   $c0
        # class             border  backgr. text
        focused_workspace   $c1     $c1     $cw
        active_workspace    $c0     $c0     $cw
        inactive_workspace  $c0     $c0     $cw
        urgent_workspace    $ur     $ur     $cw
        binding_mode        $cg     $cg     $cw
    }
}

bindsym $mod+b bar mode toggle

##################
### APPEREANCE ###
##################

# i3-gaps
smart_gaps on
gaps inner 8
gaps outer 2

## Window Border
default_border pixel 4
default_floating_border normal

####################
###### COLORS ######
####################

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $c7 i3wm.color7 #f0f0f0
set_from_resource $c6 i3wm.color6 #f0f0f0
set_from_resource $c5 i3wm.color5 #f0f0f0
set_from_resource $c4 i3wm.color4 #f0f0f0
set_from_resource $c3 i3wm.color3 #f0f0f0
set_from_resource $c2 i3wm.color2 #f0f0f0
set_from_resource $c1 i3wm.color1 #f0f0f0
set_from_resource $c0 i3wm.color0 #f0f0f0
set $cw #ffffff
set $ur #f44336
set $cg #229c56

# class                 border  backgr. text   indicator child_border
client.focused          $c6     $c6     $cw    $c6       $c6
client.focused_inactive $c5     $c5     $cw    $c5       $c5
client.unfocused        $c3     $c3     $cw    $c3       $c3
client.urgent           $ur     $ur     $ur    $ur       $ur
client.placeholder      $c2     $c2     $c3    $c2       $c2

client.background       $c0

# to edit status bar colors, see status bar section
